<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE xml>
<project name="fun-ops" default="clean" basedir=".">

	<description>
		Custom Ant Build Script for all fun-ops apps. Includes compile, jar,
		run, create exe, javadoc, unjar tasks for build generation for all apps
	</description>

	<property file="build.properties" />

	<!-- creates the launch4j task -->
	<taskdef name="launch4j" classname="net.sf.launch4j.ant.Launch4jTask" classpath="${launch4j.dir}/launch4j.jar
	        :${launch4j.dir}/lib/xstream.jar" />

	<!-- dump some basic environment-related info -->
	<tstamp>
		<format property="TODAY_US" pattern="MM/dd/yyyy hh:mm a" locale="en, US" />
	</tstamp>

	<echo message="Current date and time: ${TODAY_US}${line.separator}${ant.version}" level="info" />

	<!-- reference id for classpath holding references to all 3rd party jars in project
	If you add any 3rd party jars to use in your project, be sure to add their file locations here  -->
	<path id="build.classpath" description="a path including all dependency libraries needed to build main application classes in this project">
		<fileset dir="lib">
			<include name="*.jar" />
		</fileset>
	</path>

	<!-- clean -->
	<target name="clean" description="cleans all build generated folders">
		<delete dir="${build.dir}" verbose="true" />
		<delete dir="logs" verbose="true" />
	</target>

	<!-- target to create all project executables -->
	<target name="create ALL project executables" description="creates all project executables" depends="jar-calculator, jar-encryption program,
			jar-clock, jar-guessing game, jar-hangman, jar-pong, jar-stopwatch, jar-tic tac toe, jar-wiggle mouse">

		<antcall target="create calculator.exe" />
		<antcall target="create stopwatch.exe" />
		<antcall target="create and zip encryption.exe" />
		<antcall target="create and zip clock.exe" />
		<antcall target="create and zip number_game.exe" />
		<antcall target="create and zip hangman.exe" />
		<antcall target="create and zip pong.exe" />
		<antcall target="create and zip tic-tac-toe.exe" />
		<antcall target="create and zip wigglemouse.exe" />
	</target>

	<!-- targets for calculator -->
	<target name="compile-calculator" description="compile the java sources that will be included in the build for the specified application">
		<mkdir dir="${classes.dir}" />
		<javac includeantruntime="false" srcdir="${src.dir}/com/calculator" destdir="${classes.dir}" classpath="${build.classpath}" compiler="modern">
			<!-- this will make the compiler add the source code line numbers during the compiling process -->
			<compilerarg value="-g:lines" />
		</javac>
	</target>

	<target name="jar-calculator" depends="compile-calculator" description="creates associated .jar file for the specified application">
		<mkdir dir="${jar.dir}" />
		<jar destfile="${jar.dir}/calculator-${version.num}.jar" basedir="${classes.dir}">
			<manifest>
				<attribute name="Main-Class" value="com.calculator.MyCalculatorGui" />
			</manifest>
		</jar>
	</target>

	<target name="run-calculator" depends="jar-calculator" description="run the program">
		<java jar="${jar.dir}/calculator-${version.num}.jar" fork="true" />
	</target>

	<!-- create calculator.exe target -->
	<target name="create calculator.exe" description="creates .exe file for calculator program" depends="jar-calculator">
		<launch4j>
			<config headerType="gui" outfile="calculator.exe" dontWrapJar="false" jarPath="${jar.dir}/calculator-${version.num}.jar" icon="${res.graphics.icons.dir}/calculator.ico">
				<jre minVersion="${min.jre.version}">
					<opt>-Dlaunch4j.exedir="%EXEDIR%"</opt>
					<opt>-Dlaunch4j.exefile="%EXEFILE%"</opt>
				</jre>
				<messages startupErr="Startup Error" bundledJreErr="Bundled JRE Error" jreVersionErr="JRE Version Error" launcherErr="Launcher Error" />
			</config>
		</launch4j>

		<move file="calculator.exe" todir="${release.dir}" />
	</target>

	<!-- targets for encryption program -->
	<target name="compile-encryption program" description="compile program">
		<mkdir dir="${classes.dir}" />
		<javac includeantruntime="false" srcdir="${src.dir}/com/encryption" destdir="${classes.dir}" classpath="${build.classpath}" compiler="modern">
			<compilerarg value="-g:lines" />
		</javac>
	</target>

	<target name="jar-encryption program" depends="compile-encryption program" description="creates associated .jar file">
		<mkdir dir="${jar.dir}" />
		<jar destfile="${jar.dir}/encryptDecrypt-${version.num}.jar" basedir="${classes.dir}">
			<manifest>
				<attribute name="Main-Class" value="com.encryption.EncryptDecryptGui" />
				<attribute name="Resource" value="${res.graphics.dir}/bg-image-encryption.jpg" />
			</manifest>
		</jar>
	</target>

	<target name="run-encryption program" depends="jar-encryption program" description="run the program">
		<java jar="${jar.dir}/encryptDecrypt-${version.num}.jar" fork="true" />
	</target>

	<!-- zip encryption program -->
	<target name="zip-encryption-jar w/ resources" description="Create a zipped folder for encryption folder with jar and resources" depends="jar-encryption program">
		<copy todir="${dist.dir}/encryption-tmp">
			<fileset dir="${jar.dir}" includes="encryptDecrypt-${version.num}.jar" />
		    <fileset file="secret.txt" />
		</copy>
		<copy todir="${dist.dir}/encryption-tmp/${res.graphics.dir}">
			<fileset dir="${res.graphics.dir}" includes="bg-image-encryption.jpg" />
		</copy>
		<zip destfile="${dist.dir}/encryption.zip" basedir="${dist.dir}/encryption-tmp" update="true" />
		<delete dir="${dist.dir}/encryption-tmp" />
	</target>

	<!-- create and zip encryption.exe target -->
	<target name="create and zip encryption.exe" description="creates .exe file for encryption program" depends="jar-encryption program">
		<launch4j>
			<config headerType="gui" outfile="encryption.exe" dontWrapJar="false" jarPath="${jar.dir}/encryptDecrypt-${version.num}.jar" icon="${res.graphics.icons.dir}/encryption.ico">
				<jre minVersion="${min.jre.version}">
					<opt>-Dlaunch4j.exedir="%EXEDIR%"</opt>
					<opt>-Dlaunch4j.exefile="%EXEFILE%"</opt>
				</jre>
				<messages startupErr="Startup Error" bundledJreErr="Bundled JRE Error" jreVersionErr="JRE Version Error" launcherErr="Launcher Error" />
			</config>
		</launch4j>

		<move file="encryption.exe" todir="${release.dir}/encryption-tmp" />
		<copy todir="${release.dir}/encryption-tmp/${res.graphics.dir}">
			<fileset dir="${res.graphics.dir}" includes="bg-image-encryption.jpg" />
		</copy>
		<copy todir="${release.dir}/encryption-tmp/${res.graphics.dir}/taskbar_icons">
			<fileset dir="${res.graphics.dir}/taskbar_icons" includes="encryption.png" />
		</copy>
		<copy file="secret.txt" todir="${release.dir}/encryption-tmp" />
		<zip destfile="${release.dir}/encryption.zip" basedir="${release.dir}/encryption-tmp" update="true" />
		<delete dir="${release.dir}/encryption-tmp" />
	</target>

	<!-- targets for hangman -->
	<target name="compile-hangman" description="compile program">
		<mkdir dir="${classes.dir}" />
		<javac includeantruntime="false" srcdir="${src.dir}/com/hangman" destdir="${classes.dir}" classpath="${build.classpath}" compiler="modern">
			<compilerarg value="-g:lines" />
		</javac>
	</target>

	<target name="jar-hangman" depends="compile-hangman" description="creates associated .jar file">
		<mkdir dir="${jar.dir}" />
		<jar destfile="${jar.dir}/hangman-${version.num}.jar" basedir="${classes.dir}">
			<manifest>
				<attribute name="Main-Class" value="com.hangman.Hangman" />
				<attribute name="Resource" value="${res.graphics.dir}/bg-image-hangman.jpg" />
			</manifest>
		</jar>
	</target>

	<target name="run-hangman" depends="jar-hangman" description="run the program">
		<java jar="${jar.dir}/hangman-${version.num}.jar" fork="true" />
	</target>

	<!-- zip-hangman-jar w/ resources target -->
	<target name="zip-hangman-jar w/ resources" description="Create zipped folder for hangman game with jar and resources" depends="jar-hangman">
		<copy todir="${dist.dir}/hangman-tmp">
			<fileset dir="${jar.dir}" includes="hangman-${version.num}.jar" />
		    <fileset file="secret.txt" />
		</copy>
		<copy todir="${dist.dir}/hangman-tmp/${res.graphics.dir}">
			<fileset dir="${res.graphics.dir}" includes="bg-image-hangman.jpg" />
		</copy>
		<zip destfile="${dist.dir}/hangman.zip" basedir="${dist.dir}/hangman-tmp" update="true" />
		<delete dir="${dist.dir}/hangman-tmp" />
	</target>

	<!-- create and zip hangman.exe target -->
	<target name="create and zip hangman.exe" description="creates .exe file for hangman program" depends="jar-hangman">
		<launch4j>
			<config headerType="gui" outfile="hangman.exe" dontWrapJar="false" jarPath="${jar.dir}/hangman-${version.num}.jar" icon="${res.graphics.icons.dir}/hangman.ico">
				<jre minVersion="${min.jre.version}">
					<opt>-Dlaunch4j.exedir="%EXEDIR%"</opt>
					<opt>-Dlaunch4j.exefile="%EXEFILE%"</opt>
				</jre>
				<messages startupErr="Startup Error" bundledJreErr="Bundled JRE Error" jreVersionErr="JRE Version Error" launcherErr="Launcher Error" />
			</config>
		</launch4j>

		<move file="hangman.exe" todir="${release.dir}/hangman-tmp" />
		<copy todir="${release.dir}/hangman-tmp/res/graphics">
			<fileset dir="${res.graphics.dir}" includes="bg-image-hangman.jpg" />
		</copy>
		<copy todir="${release.dir}/hangman-tmp/res/graphics/taskbar_icons">
			<fileset dir="${res.graphics.dir}/taskbar_icons" includes="hangman.png" />
		</copy>
		<copy file="hangman.txt" todir="${release.dir}/hangman-tmp" />
		<zip destfile="${release.dir}/hangman.zip" basedir="${release.dir}/hangman-tmp" update="true" />
		<delete dir="${release.dir}/hangman-tmp" />
	</target>

	<!-- create stopwatch.exe target -->
	<target name="create stopwatch.exe" description="creates .exe file for stopwatch program" depends="jar-stopwatch">
		<launch4j>
			<config headerType="gui" outfile="stopwatch.exe" dontWrapJar="false" jarPath="${jar.dir}/stopwatch-${version.num}.jar" icon="${res.graphics.icons.dir}/stopwatch.ico">
				<jre minVersion="${min.jre.version}">
					<opt>-Dlaunch4j.exedir="%EXEDIR%"</opt>
					<opt>-Dlaunch4j.exefile="%EXEFILE%"</opt>
				</jre>
				<messages startupErr="Startup Error" bundledJreErr="Bundled JRE Error" jreVersionErr="JRE Version Error" launcherErr="Launcher Error" />
			</config>
		</launch4j>

		<move file="stopwatch.exe" todir="${release.dir}" />
	</target>

	<!-- targets for guessing game and advanced guessing game -->
	<target name="compile-guessing game" description="compile program">
		<mkdir dir="${classes.dir}" />
		<javac includeantruntime="false" srcdir="${src.dir}/com/stopwatch;${src.dir}/com/numbergame" destdir="${classes.dir}" classpath="${build.classpath}" compiler="modern">
			<compilerarg value="-g:lines" />
		</javac>
	</target>

	<target name="jar-guessing game" depends="compile-guessing game" description="creates associated .jar file">
		<mkdir dir="${jar.dir}" />
		<jar destfile="${jar.dir}/guessingGame-${version.num}.jar" basedir="${classes.dir}">
			<manifest>
				<attribute name="Main-Class" value="com.numbergame.GuessingGame" />
				<attribute name="Resource1" value="${res.audio.dir}/chimes.wav" />
				<attribute name="Resource2" value="${res.audio.dir}/fail.wav" />
				<attribute name="Resource3" value="${res.audio.dir}/win.wav" />
				<attribute name="Resource4" value="${res.graphics.dir}/bg-image-guessing-figure.jpg" />
				<attribute name="Resource5" value="${res.graphics.dir}/bg-image-guess.jpg" />
			</manifest>
		</jar>
	</target>

	<target name="run-guessing game" depends="jar-guessing game" description="run the program">
		<java jar="${jar.dir}/guessingGame-${version.num}.jar" fork="true" />
	</target>

	<target name="jar-adv-guessing game" depends="compile-guessing game" description="creates associated .jar file">
		<mkdir dir="${jar.dir}" />
		<jar destfile="${jar.dir}/adv-guessingGame-${version.num}.jar" basedir="${classes.dir}">
			<manifest>
				<attribute name="Main-Class" value="com.numbergame.AdvancedGuessingGame" />
				<attribute name="Resource" value="${res.audio.dir}/chimes.wav" />
				<attribute name="Resource2" value="${res.audio.dir}/fail.wav" />
				<attribute name="Resource3" value="${res.audio.dir}/win.wav" />
				<attribute name="Resource4" value="${res.graphics.dir}/bg-image-guessing-figure.jpg" />
				<attribute name="Resource5" value="${res.graphics.dir}/bg-image-guess.jpg" />
			</manifest>
		</jar>
	</target>

	<target name="run-adv-guessing game" depends="jar-adv-guessing game" description="run the program">
		<java jar="${jar.dir}/adv-guessingGame-${version.num}.jar" fork="true" />
	</target>

	<!-- targets for ping pong game -->
	<target name="compile-pong" description="compile program">
		<mkdir dir="${classes.dir}" />
		<javac includeantruntime="false" srcdir="${src.dir}/com/pingpong" destdir="${classes.dir}" classpath="${build.classpath}" compiler="modern">
			<compilerarg value="-g:lines" />
		</javac>
	</target>

	<target name="jar-pong" depends="compile-pong" description="creates associated .jar file">
		<mkdir dir="${jar.dir}" />
		<jar destfile="${jar.dir}/pong-${version.num}.jar" basedir="${classes.dir}">
			<manifest>
				<attribute name="Main-Class" value="com.pingpong.PingPongGui" />
				<attribute name="Resource" value="${res.graphics.dir}/restart-sign.png" />
			</manifest>
		</jar>
	</target>

	<target name="run-pong" depends="jar-pong" description="run the program">
		<java jar="${jar.dir}/pong-${version.num}.jar" fork="true" />
	</target>

	<!-- zip guessing game -->
	<target name="zip-guessing-game-jar w/ resources" description="Create zipped folder for guessing game with jar and resources" depends="jar-guessing game">
		<copy file="${jar.dir}/guessingGame-${version.num}.jar" todir="${dist.dir}/guessingGame-tmp" />
		<copy todir="${dist.dir}/guessingGame-tmp/${res.graphics.dir}">
			<fileset dir="${res.graphics.dir}" includes="bg-image-guess.jpg" />
		</copy>
		<copy todir="${dist.dir}/guessingGame-tmp/${res.audio.dir}">
			<fileset dir="${res.audio.dir}" includes="*.wav" />
		</copy>
		<zip destfile="${dist.dir}/guessingGame.zip" basedir="${dist.dir}/guessingGame-tmp" update="true" />
		<delete dir="${dist.dir}/guessingGame-tmp" />
	</target>

	<!-- create and zip number game.exe target -->
	<target name="create and zip number_game.exe" description="creates .exe file for number game" depends="jar-guessing game, jar-adv-guessing game">
		<launch4j>
			<config headerType="gui" outfile="number_game.exe" dontWrapJar="false" jarPath="${jar.dir}/guessingGame-${version.num}.jar" icon="${res.graphics.icons.dir}/guessing-game.ico">
				<jre minVersion="${min.jre.version}">
					<opt>-Dlaunch4j.exedir="%EXEDIR%"</opt>
					<opt>-Dlaunch4j.exefile="%EXEFILE%"</opt>
				</jre>
				<messages startupErr="Startup Error" bundledJreErr="Bundled JRE Error" jreVersionErr="JRE Version Error" launcherErr="Launcher Error" />
			</config>
		</launch4j>

		<launch4j>
			<config headerType="gui" outfile="adv_number_game.exe" dontWrapJar="false" jarPath="${jar.dir}/adv-guessingGame-${version.num}.jar" icon="${res.graphics.icons.dir}/guessing-game.ico">
				<jre minVersion="${min.jre.version}">
					<opt>-Dlaunch4j.exedir="%EXEDIR%"</opt>
					<opt>-Dlaunch4j.exefile="%EXEFILE%"</opt>
				</jre>
				<messages startupErr="Startup Error" bundledJreErr="Bundled JRE Error" jreVersionErr="JRE Version Error" launcherErr="Launcher Error" />
			</config>
		</launch4j>

		<move todir="${release.dir}/number_game-tmp">
			<filelist dir=".">
				<file name="number_game.exe" />
				<file name="adv_number_game.exe" />
			</filelist>
		</move>
		<copy todir="${release.dir}/number_game-tmp/${res.graphics.dir}">
			<fileset dir="${res.graphics.dir}" includes="bg-image-guess*.jpg" />
		</copy>
		<copy todir="${release.dir}/number_game-tmp/${res.audio.dir}">
			<fileset dir="${res.audio.dir}" includes="*" />
		</copy>
		<copy todir="${release.dir}/number_game-tmp/${res.graphics.dir}/taskbar_icons">
			<fileset dir="${res.graphics.dir}/taskbar_icons" includes="guessing-game.png" />
		</copy>
		<zip destfile="${release.dir}/number_game.zip" basedir="${release.dir}/number_game-tmp" update="true" />
		<delete dir="${release.dir}/number_game-tmp" />
	</target>

	<!-- targets for stopwatch -->
	<target name="compile-stopwatch" description="compile program">
		<mkdir dir="${classes.dir}" />
		<javac includeantruntime="false" srcdir="${src.dir}/com/stopwatch" destdir="${classes.dir}" classpath="${build.classpath}" compiler="modern">
			<compilerarg value="-g:lines" />
		</javac>
	</target>

	<target name="jar-stopwatch" depends="compile-stopwatch" description="creates associated .jar file">
		<mkdir dir="${jar.dir}" />
		<jar destfile="${jar.dir}/stopwatch-${version.num}.jar" basedir="${classes.dir}">
			<manifest>
				<attribute name="Main-Class" value="com.stopwatch.StopWatch" />
			</manifest>
		</jar>
	</target>

	<target name="run-stopwatch" depends="jar-stopwatch" description="run the program">
		<java jar="${jar.dir}/stopwatch-${version.num}.jar" fork="true" />
	</target>

	<!-- targets for tic tac toe -->
	<target name="compile-tic tac toe" description="compile program">
		<mkdir dir="${classes.dir}" />
		<javac includeantruntime="false" srcdir="${src.dir}/com/tictactoe" destdir="${classes.dir}" classpath="${build.classpath}" compiler="modern">
			<compilerarg value="-g:lines" />
		</javac>
	</target>

	<target name="jar-tic tac toe" depends="compile-tic tac toe" description="creates associated .jar file">
		<mkdir dir="${jar.dir}" />
		<jar destfile="${jar.dir}/tic_tac_toe-${version.num}.jar" basedir="${classes.dir}">
			<manifest>
				<attribute name="Main-Class" value="com.tictactoe.TicTacToe" />
				<attribute name="Resource" value="${res.graphics.dir}/bg-image-tac.jpg" />
			</manifest>
		</jar>
	</target>

	<target name="run-tic tac toe" depends="jar-tic tac toe" description="run the program">
		<java jar="${jar.dir}/tic_tac_toe-${version.num}.jar" fork="true" />
	</target>

	<!-- zip tic tac toe program -->
	<target name="zip-tic_tac_toe-jar w/ resources" description="Create zipped folder for hangman game with jar and resources" depends="jar-tic tac toe">
		<copy todir="${dist.dir}/ticTacToe-tmp">
			<fileset dir="${jar.dir}" includes="tic_tac_toe-${version.num}.jar" />
		</copy>
		<copy todir="${dist.dir}/ticTacToe-tmp/${res.graphics.dir}">
			<fileset dir="${res.graphics.dir}" includes="bg-image-tac.jpg" />
		</copy>
		<zip destfile="${dist.dir}/ticTacToe.zip" basedir="${dist.dir}/ticTacToe-tmp" update="true" />
		<delete dir="${dist.dir}/ticTacToe-tmp" />
	</target>

	<!-- create tic-tac-toe.exe target -->
	<target name="create and zip tic-tac-toe.exe" description="creates and zip .exe file for tic tac toe game" depends="jar-tic tac toe">
		<launch4j>
			<config headerType="gui" outfile="tic-tac-toe.exe" dontWrapJar="false" jarPath="${jar.dir}/tic_tac_toe-${version.num}.jar" icon="${res.graphics.icons.dir}/tic-tac-toe.ico">
				<jre minVersion="${min.jre.version}">
					<opt>-Dlaunch4j.exedir="%EXEDIR%"</opt>
					<opt>-Dlaunch4j.exefile="%EXEFILE%"</opt>
				</jre>
				<messages startupErr="Startup Error" bundledJreErr="Bundled JRE Error" jreVersionErr="JRE Version Error" launcherErr="Launcher Error" />
			</config>
		</launch4j>

		<move file="tic-tac-toe.exe" todir="${release.dir}/tic_tac_toe-tmp" />
		<copy todir="${release.dir}/tic_tac_toe-tmp/${res.graphics.dir}">
			<fileset dir="${res.graphics.dir}" includes="bg-image-tac.jpg" />
		</copy>
		<copy todir="${release.dir}/tic_tac_toe-tmp/${res.graphics.dir}/taskbar_icons">
			<fileset dir="${res.graphics.dir}/taskbar_icons" includes="tic-tac-toe.png" />
		</copy>
		<zip destfile="${release.dir}/tic_tac_toe.zip" basedir="${release.dir}/tic_tac_toe-tmp" update="true" />
		<delete dir="${release.dir}/tic_tac_toe-tmp" />
	</target>

	<!-- targets for wiggle mouse -->
	<target name="compile-wiggle mouse" description="compile program">
		<mkdir dir="${classes.dir}" />
		<javac includeantruntime="false" srcdir="${src.dir}/com/wigglemouse" destdir="${classes.dir}" classpath="${build.classpath}" compiler="modern">
			<compilerarg value="-g:lines" />
		</javac>
	</target>

	<target name="jar-wiggle mouse" depends="compile-wiggle mouse" description="creates associated .jar file">
		<mkdir dir="${jar.dir}" />
		<jar destfile="${jar.dir}/wigglemouse-${version.num}.jar" basedir="${classes.dir}">
			<manifest>
				<attribute name="Main-Class" value="com.wigglemouse.WiggleMouse" />
				<attribute name="Resource" value="${res.graphics.dir}/image-mouse-shake.jpg" />
			</manifest>
		</jar>
	</target>

	<target name="run-wiggle mouse" depends="jar-wiggle mouse" description="run the program">
		<java jar="${jar.dir}/wigglemouse-${version.num}.jar" fork="true" />
	</target>

	<!-- zip wigglemouse program -->
	<target name="zip-wigglemouse-jar w/ resources" description="Create zipped folder for wigglemouse with jar and resources" depends="jar-wiggle mouse">
		<copy todir="${dist.dir}/wigglemouse-tmp">
			<fileset dir="${jar.dir}" includes="wigglemouse-${version.num}.jar" />
		</copy>
		<copy todir="${dist.dir}/wigglemouse-tmp/${res.graphics.dir}">
			<fileset dir="${res.graphics.dir}" includes="image-mouse-shake.jpg" />
		</copy>
		<zip destfile="${dist.dir}/wigglemouse.zip" basedir="${dist.dir}/wigglemouse-tmp" update="true" />
		<delete dir="${dist.dir}/wigglemouse-tmp" />
	</target>

	<!-- create wiggle mouse.exe target -->
	<target name="create and zip wigglemouse.exe" description="creates .exe file for wiggle mouse program" depends="jar-wiggle mouse">
		<launch4j>
			<config headerType="gui" outfile="wigglemouse.exe" dontWrapJar="false" jarPath="${jar.dir}/wigglemouse-${version.num}.jar" icon="${res.graphics.icons.dir}/mouse.ico">
				<jre minVersion="${min.jre.version}">
					<opt>-Dlaunch4j.exedir="%EXEDIR%"</opt>
					<opt>-Dlaunch4j.exefile="%EXEFILE%"</opt>
				</jre>
				<messages startupErr="Startup Error" bundledJreErr="Bundled JRE Error" jreVersionErr="JRE Version Error" launcherErr="Launcher Error" />
			</config>
		</launch4j>

		<move file="wigglemouse.exe" todir="${release.dir}/wigglemouse-tmp" />
		<copy todir="${release.dir}/wigglemouse-tmp/${res.graphics.dir}">
			<fileset dir="${res.graphics.dir}" includes="image-mouse-shake.jpg" />
		</copy>
		<copy todir="${release.dir}/wigglemouse-tmp/${res.graphics.dir}/taskbar_icons">
			<fileset dir="${res.graphics.dir}/taskbar_icons" includes="mouse.png" />
		</copy>
		<zip destfile="${release.dir}/wigglemouse.zip" basedir="${release.dir}/wigglemouse-tmp" update="true" />
		<delete dir="${release.dir}/wigglemouse-tmp" />
	</target>

	<!-- create and zip clock.exe target -->
	<target name="create and zip clock.exe" description="creates .exe file for wiggle mouse program" depends="jar-clock">
		<launch4j>
			<config headerType="gui" outfile="clock.exe" dontWrapJar="false" jarPath="${jar.dir}/clock-${version.num}.jar" icon="${res.graphics.icons.dir}/clock.ico">
				<jre minVersion="${min.jre.version}">
					<opt>-Dlaunch4j.exedir="%EXEDIR%"</opt>
					<opt>-Dlaunch4j.exefile="%EXEFILE%"</opt>
				</jre>
				<messages startupErr="Startup Error" bundledJreErr="Bundled JRE Error" jreVersionErr="JRE Version Error" launcherErr="Launcher Error" />
			</config>
		</launch4j>

		<move file="clock.exe" todir="${release.dir}/clock-tmp" />
		<copy todir="${release.dir}/clock-tmp/res">
			<fileset dir="res" includes="fonts/" />
		</copy>
		<copy todir="${release.dir}/clock-tmp/${res.graphics.dir}">
			<fileset dir="${res.graphics.dir}" includes="alarm-clock-sign.png, night-sky-stars-animation.gif" />
		</copy>
		<copy todir="${release.dir}/clock-tmp/${res.graphics.dir}/taskbar_icons">
			<fileset dir="${res.graphics.dir}/taskbar_icons" includes="clock.png" />
		</copy>
		<copy todir="${release.dir}/clock-tmp/${res.audio.dir}">
			<fileset dir="${res.audio.dir}" includes="clock-alarm.wav" />
		</copy>
		<zip destfile="${release.dir}/clock.zip" basedir="${release.dir}/clock-tmp" update="true" />
		<delete dir="${release.dir}/clock-tmp" />
	</target>

	<!-- create and zip pong.exe target -->
	<target name="create and zip pong.exe" description="creates .exe file for wiggle mouse program" depends="jar-pong">
		<launch4j>
			<config headerType="gui" outfile="pong.exe" dontWrapJar="false" jarPath="${jar.dir}/pong-${version.num}.jar" icon="${res.graphics.icons.dir}/pingpong.ico">
				<jre minVersion="${min.jre.version}">
					<opt>-Dlaunch4j.exedir="%EXEDIR%"</opt>
					<opt>-Dlaunch4j.exefile="%EXEFILE%"</opt>
				</jre>
				<messages startupErr="Startup Error" bundledJreErr="Bundled JRE Error" jreVersionErr="JRE Version Error" launcherErr="Launcher Error" />
			</config>
		</launch4j>

		<move file="pong.exe" todir="${release.dir}/pong-tmp" />
		<copy todir="${release.dir}/pong-tmp/${res.graphics.dir}">
			<fileset dir="${res.graphics.dir}" includes="restart-sign.png" />
		</copy>
		<copy todir="${release.dir}/pong-tmp/${res.graphics.dir}/taskbar_icons">
			<fileset dir="${res.graphics.dir}/taskbar_icons" includes="pingpong.png" />
		</copy>
		<zip destfile="${release.dir}/pong.zip" basedir="${release.dir}/pong-tmp" update="true" />
		<delete dir="${release.dir}/pong-tmp" />
	</target>

	<!-- targets for clock -->
	<target name="compile-clock" description="compile program">
		<mkdir dir="${classes.dir}" />
		<javac includeantruntime="false" srcdir="${src.dir}/com/clock" destdir="${classes.dir}" classpath="${build.classpath}" compiler="modern">
			<compilerarg value="-g:lines" />
		</javac>
	</target>

	<target name="jar-clock" depends="compile-clock" description="creates associated .jar file">
		<mkdir dir="${jar.dir}" />
		<jar destfile="${jar.dir}/clock-${version.num}.jar" basedir="${classes.dir}">
			<manifest>
				<attribute name="Main-Class" value="com.clock.Clock" />
				<attribute name="Resource1" value="res/fonts/clock-font.tff" />
				<attribute name="Resource2" value="${res.audio.dir}/clock-alarm.wav" />
				<attribute name="Resource3" value="${res.graphics.dir}/alarm-clock-sign.png" />
				<attribute name="Resource4" value="${res.graphics.dir}/night-sky-stars-animation.gif" />
			</manifest>
		</jar>
	</target>

	<target name="run-clock" depends="jar-clock" description="run the program">
		<java jar="${jar.dir}/clock-${version.num}.jar" fork="true" />
	</target>

	<!-- javadoc target -->
	<target name="create javadoc for all programs" description="generate Javadoc for applications">
		<javadoc sourcepath="src" destdir="${build.dir}/docs/api" classpath="${build.classpath}" docencoding="UTF-8" author="true" version="true" windowtitle="My API Page" />
	</target>

	<!-- unjar target -->
	<target name="unjar all jars" description="unjar all existing program jars" depends="jar-calculator, jar-encryption program,
		jar-hangman, jar-guessing game, jar-tic tac toe, jar-wiggle mouse">

		<unjar dest="${unjar.dir}">
			<fileset dir="${jar.dir}" includes="*.jar" />
		</unjar>
	</target>
</project>
